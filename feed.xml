<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julia's Wintersmith Blog</title>
    <atom:link href="http://localhost:8080/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://localhost:8080</link>
    <description>Someday I may know something</description>
    <pubDate>Wed, 07 Oct 2015 17:00:00 -0700</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Do I need Sass or Less?</title>
      <link>http://localhost:8080/articles/Preprocessors.html</link>
      <pubDate>Wed, 07 Oct 2015 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/Preprocessors.html</guid>
      <author></author>
      <description>&lt;p&gt;In reading around on the web about how to implement Wintersmith, I came upon many blogs extolling the benefits of Sass/Less for writing and maintaining CSS.&lt;/p&gt;
&lt;p&gt;Sass, Less, Coffeescript, and HAML are all preprocessors. Wintersmith uses the Coffeescript preprocessor and the Jade template engine, which is based on the HAML preprocessor.&lt;/p&gt;
&lt;p&gt;Preprocessors are designed to make it easier to maintain code. The code is written in the preprocessor format, and then is converted to CSS/Javascript/HTML so that the information can be read on the web.  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sass and Less translate into CSS&lt;/li&gt;
&lt;li&gt;Coffeescript translates into Javascript&lt;/li&gt;
&lt;li&gt;HAML translates into HTML&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There’s a lot of information there. I’ll definitely be leaving Coffeescript and HAML/Jade until a later date. But would it make sense to start now with Sass or Less now?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What features of Sass/Less make it helpful?&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;CSS Nesting&lt;/strong&gt;. This makes it easier to read the CSS file when you are styling a web site.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt;. In Sass you can define a variable for an item like a color that is used in many places in the web site. The variable is declared once. The variable name is used each time an element is set to the color.  If the color changes for the web site, only the variable needs to be updated.  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Mixins&lt;/strong&gt;. A mixin allows you to define a snippet in CSS so you can use the same code in many places. You can write your own mixins, or use a library like the Compass or Bourbon. Mixins are often used for the repetitive CSS that is required for cross browser compatibility.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;My current answer to the question - Do I need Sass or Less:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It sounds like the value of using it would come from adding it along with a library (Compass/Bourbon), so there would be the inevitable learning curve for that.  As well as the complexities of adding the node.js version (libSass) and learning how to compile it into CSS, and add it into Wintersmith. For now I am answering my question with a no.  But it’s on the list for the future. Along with Coffeescript and HAML/Jade… it’s a long list.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Adding Photos</title>
      <link>http://localhost:8080/articles/TestPhotos.html</link>
      <pubDate>Tue, 06 Oct 2015 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/TestPhotos.html</guid>
      <author></author>
      <description>&lt;p&gt;I am interested in how images can be added to the Wintersmith system. To start with, I’ve inserted a couple of random photos.  &lt;/p&gt;
&lt;p&gt;The photos seem to scale fairly well, but I can probably improve that. But what if I want to use a different photo in the mobile versus desktop version? At the moment, I don’t know how that can be done. Javascript?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/road.png&quot; alt=&quot;Random Road&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/mytest.png&quot; alt=&quot;Random Street&quot;&gt;&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Why Wintersmith?</title>
      <link>http://localhost:8080/articles/WhyWintersmith.html</link>
      <pubDate>Mon, 05 Oct 2015 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/WhyWintersmith.html</guid>
      <author></author>
      <description>&lt;p&gt;I’ve worked with Help and Manual, RoboHelp, and MadCap Flare and I’ve become accustomed to being able to single source to webhelp, pdf, chm and other formats quickly.  I’d like to have one of those systems for my own writing.  &lt;/p&gt;
&lt;p&gt;Each of the commercial help authoring products has great features, and if someone was to give me a free copy, I would happily work away. However, Murphy’s Law states that if I buy one of these products, my next project will be in one of the others. And by the time I return to the product I purchased it will be out of date.  So how to set up my home writing system without spending too much? Options abound.  In all sorts of directions. Everything seems so expensive.  Lower cost options: Scribner? Jekyll and git? Gosh. OxygenXML has a $200 version for home use.  Hmmm… maybe? No, that didn’t work out.  I looked at Jekyll but read that it works best on Mac, and although I have a Mac, I do most of my work on Windows. &lt;/p&gt;
&lt;p&gt;So I decided to try the Wintersmith site generator.  In the process I learned:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to host a free web site on Github: &lt;a href=&quot;http://jmdocs.github.io&quot;&gt;jmdocs.github.io&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;More about Markdown, and the various different types of Markdown.&lt;/li&gt;
&lt;li&gt;How a static web site generator works. For Wintersmith, this included an intro to npm, jade, coffeescript plus a fair bit of time on css.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt; This project has taken me quite far from writing while doing the setup. It will be interesting to see how comfortable it is to work with Markdown and pushing posts out. How this sort of system will work for documentation (and pdfs) is still a question. So far, so good.&lt;/p&gt;
&lt;p&gt;Thanks to the developer of &lt;a href=&quot;http://localhost:8080/articles/johan-nordberg.com&quot;&gt;Wintersmith&lt;/a&gt;, as well as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://thisisdallas.github.io/Simple-Grid&quot;&gt;Simple Grid&lt;/a&gt; - for getting me started on how grids work. Part way along I switched to pureio.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yearlonghackathon.com/&quot;&gt;YearlongHackathon&lt;/a&gt;  - for explaining how to add the partials section for Jade that I was able to use to auto generate the menu sidebar.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.alexnormand.com/&quot;&gt;Alex Normand&lt;/a&gt; - for having a great site, from which I got the idea to use pureio.css.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://marcocarag.com/2014/03/30/migrating-my-blog-s-content-to-wintersmith/&quot;&gt;marcocarag.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://andrewphilipclark.com/&quot;&gt;Andrew Clark - 8 Nov 13&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and so many other articles that were read in the google browsathon that it took to get this initial web site up!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:8080/articles/About.html</link>
      <pubDate>Sun, 04 Oct 2015 17:00:00 -0700</pubDate>
      <guid isPermaLink="true">http://localhost:8080/articles/About.html</guid>
      <author></author>
      <description>&lt;p&gt;I am a Technical Writer and I created this blog to see how a static site generator might used for documentation projects. &lt;/p&gt;
&lt;p&gt;I got the idea to try this out after reading this &lt;a href=&quot;http://idratherbewriting.com/2015/09/29/how-are-you-doing-docs/&quot;&gt;I’d Rather be Writing&lt;/a&gt; article.&lt;/p&gt;
&lt;p&gt;I have the blog now, but I’m still looking into how this might be used for documentation. There are a lot of pieces to these things! When I have time I’d like to learn more about pdf generators, node.js, responsive design, and several hundred other things that might be helpful.&lt;/p&gt;
&lt;p&gt;It’s a work in progress.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>